server:
  port: ${PORT:8080}
  tomcat:
    remoteip:
      protocol-header: x-forwarded-proto

spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      idle-timeout: 1800000
      max-lifetime: 3600000
  jpa:
    open-in-view: ${JPA_OPEN_IN_VIEW:false}
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        # to use custom function
        dialect: kr.co.jsol.jem.common.infrastructure.database.MariaDBFunctionsDialect
        default_batch_fetch_size: 1000
        highlight_sql: true
  file:
    minio-url: ${MINIO_URL:}
    minio-bucket: ${MINIO_BUCKET:}
    minio-access-key: ${MINIO_ACCESS_KEY:}
    minio-secret-key: ${MINIO_SECRET_KEY:}
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:100MB}
      max-request-size: ${MAX_REQUEST_SIZE:100MB}

jwt:
  access-secret-key: ${JWT_ACCESS_SECRET_KEY:}
  refresh-secret-key: ${JWT_REFRESH_SECRET_KEY:}

logging:
  level:
    org:
      springframework:
        data: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA:DEBUG}
      hibernate:
        jdbc:
        type:
          descriptor:
            sql: ${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL:OFF} # 기본은 사용안함

springdoc:
  swagger-ui:
    path: /api-docs
    operations-sorter: method # method: HttpMethod 순으로 정렬, alpha: 알파벳 순으로 정렬
    syntax-highlight:
      activated: true
    tags-sorter: alpha # 태그 알파벳 순으로 정렬
    doc-expansion: none
    persist-authorization: true
    display-request-duration: true

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        exclude: env, beans, redis
        include: health, prometheus
      base-path: /actuator
    jmx:
      exposure:
        exclude: "*"
  endpoint:
    health:
      show-details: always
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: false
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      maximum-expected-value:
        http.server.requests: 1s
